{"ast":null,"code":"var _jsxFileName = \"/Users/Joseph/Development/code/MOD 4 Labs/lutrivia-react-chicago-web-82619/lutrivia/src/Question.js\";\nimport React, { Component } from 'react';\nimport AnswerButton from './AnswerButton';\nexport class Question extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectionMade: false,\n      selectedAnswer: null,\n      selected: ''\n    };\n\n    this.handleSelection = (e, id) => {\n      this.setState({\n        selectionMade: true,\n        selectedAnswer: e.target.value.toLowerCase(),\n        selected: id\n      });\n    };\n\n    this.checkAnswer = () => {\n      if (this.state.selectedAnswer === this.props.answer.toString()) {}\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, this.props.text), /*#__PURE__*/React.createElement(AnswerButton, {\n      id: \"true\",\n      btnValue: 'True',\n      handleSelection: this.handleSelection,\n      disabled: this.state.selectionMade,\n      selected: this.state.selected,\n      answer: this.props.answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AnswerButton, {\n      id: \"false\",\n      btnValue: 'False',\n      handleSelection: this.handleSelection,\n      disabled: this.state.selectionMade,\n      selected: this.state.selected,\n      answer: this.props.answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default Question;\n/* <button\n        className={`game-button question-button ${\n          this.state.trueBtn === 'not-selected' ? '' : 'hightlight'\n        }`}\n        disabled={this.state.selectionMade}\n        value=\"true\"\n        onClick={this.handleSelection}\n      >\n        True\n      </button>\n      <button\n        className={`game-button question-button`}\n        disabled={this.state.selectionMade}\n        value=\"false\"\n        onClick={this.handleSelection}\n      >\n        False\n      </button> */","map":{"version":3,"sources":["/Users/Joseph/Development/code/MOD 4 Labs/lutrivia-react-chicago-web-82619/lutrivia/src/Question.js"],"names":["React","Component","AnswerButton","Question","state","selectionMade","selectedAnswer","selected","handleSelection","e","id","setState","target","value","toLowerCase","checkAnswer","props","answer","toString","render","console","log","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCG,KADsC,GAC9B;AACNC,MAAAA,aAAa,EAAE,KADT;AAENC,MAAAA,cAAc,EAAE,IAFV;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAD8B;;AAAA,SAOtCC,eAPsC,GAOpB,CAACC,CAAD,EAAIC,EAAJ,KAAW;AAC3B,WAAKC,QAAL,CAAc;AACZN,QAAAA,aAAa,EAAE,IADH;AAEZC,QAAAA,cAAc,EAAEG,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,WAAf,EAFJ;AAGZP,QAAAA,QAAQ,EAAEG;AAHE,OAAd;AAKD,KAbqC;;AAAA,SAetCK,WAfsC,GAexB,MAAM;AAClB,UAAI,KAAKX,KAAL,CAAWE,cAAX,KAA8B,KAAKU,KAAL,CAAWC,MAAX,CAAkBC,QAAlB,EAAlC,EAAgE,CAE/D;AACF,KAnBqC;AAAA;;AAqBtCC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKY,KAAL,CAAWM,IAAzC,CADF,eAGE,oBAAC,YAAD;AACE,MAAA,EAAE,EAAE,MADN;AAEE,MAAA,QAAQ,EAAE,MAFZ;AAGE,MAAA,eAAe,EAAE,KAAKd,eAHxB;AAIE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,aAJvB;AAKE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWG,QALvB;AAME,MAAA,MAAM,EAAE,KAAKS,KAAL,CAAWC,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAWE,oBAAC,YAAD;AACE,MAAA,EAAE,EAAE,OADN;AAEE,MAAA,QAAQ,EAAE,OAFZ;AAGE,MAAA,eAAe,EAAE,KAAKT,eAHxB;AAIE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,aAJvB;AAKE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWG,QALvB;AAME,MAAA,MAAM,EAAE,KAAKS,KAAL,CAAWC,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAsBD;;AA7CqC;AAgDxC,eAAed,QAAf;AAGE","sourcesContent":["import React, { Component } from 'react';\nimport AnswerButton from './AnswerButton';\n\nexport class Question extends Component {\n  state = {\n    selectionMade: false,\n    selectedAnswer: null,\n    selected: '',\n  };\n\n  handleSelection = (e, id) => {\n    this.setState({\n      selectionMade: true,\n      selectedAnswer: e.target.value.toLowerCase(),\n      selected: id\n    });\n  };\n\n  checkAnswer = () => {\n    if (this.state.selectedAnswer === this.props.answer.toString()) {\n\n    }\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"question-container\">\n        <p className=\"question-text\">{this.props.text}</p>\n\n        <AnswerButton\n          id={\"true\"}\n          btnValue={'True'}\n          handleSelection={this.handleSelection}\n          disabled={this.state.selectionMade}\n          selected={this.state.selected}\n          answer={this.props.answer}\n        />\n        <AnswerButton\n          id={\"false\"}\n          btnValue={'False'}\n          handleSelection={this.handleSelection}\n          disabled={this.state.selectionMade}\n          selected={this.state.selected}\n          answer={this.props.answer}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Question;\n\n\n  /* <button\n          className={`game-button question-button ${\n            this.state.trueBtn === 'not-selected' ? '' : 'hightlight'\n          }`}\n          disabled={this.state.selectionMade}\n          value=\"true\"\n          onClick={this.handleSelection}\n        >\n          True\n        </button>\n        <button\n          className={`game-button question-button`}\n          disabled={this.state.selectionMade}\n          value=\"false\"\n          onClick={this.handleSelection}\n        >\n          False\n        </button> */\n"]},"metadata":{},"sourceType":"module"}