{"ast":null,"code":"var _jsxFileName = \"/Users/Joseph/Development/code/MOD 4 Labs/lutrivia-react-chicago-web-82619/lutrivia/src/App.js\";\nimport React, { Component } from 'react';\nimport data from './data';\nimport Question from './Question';\nimport axios from 'axios';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [],\n      score: 0,\n      name: '',\n      scores: []\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const formData = {\n        name: this.state.name,\n        score: this.state.score\n      };\n      console.log(formData);\n      axios.post('http://localhost:3000/scores', formData).then(res => {\n        if (res.status === 201) this.getScores();\n      });\n    };\n\n    this.updateScore = () => {\n      this.setState({\n        score: this.state.score + 1\n      });\n    };\n\n    this.handleNewGame = () => {\n      this.setState({\n        score: 0,\n        questions: []\n      }, () => this.getQuestions());\n    };\n\n    this.getQuestions = () => {\n      this.setState({\n        questions: data.questions\n      });\n    };\n\n    this.getScores = () => {\n      axios.get('http://localhost:3000/scores').then(scores => this.setState({\n        scores\n      }));\n    };\n\n    this.componentDidMount = () => {\n      this.getQuestions();\n      this.getScores();\n    };\n  }\n\n  render() {\n    let displayedQuestions = [...this.state.questions];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"game-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Lutrivia\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"game-button new-game\",\n      onClick: this.handleNewGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"New Game\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Score: \", this.state.score)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, displayedQuestions.map((question, idx) => {\n      return /*#__PURE__*/React.createElement(Question, Object.assign({\n        key: idx\n      }, question, {\n        updateScore: this.updateScore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"name-input\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      placeholder: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"game-button submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Submit Score\")));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/Joseph/Development/code/MOD 4 Labs/lutrivia-react-chicago-web-82619/lutrivia/src/App.js"],"names":["React","Component","data","Question","axios","App","state","questions","score","name","scores","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","formData","console","log","post","then","res","status","getScores","updateScore","handleNewGame","getQuestions","get","componentDidMount","render","displayedQuestions","map","question","idx"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport data from './data';\nimport Question from './Question';\nimport axios from 'axios';\n\nexport class App extends Component {\n  state = {\n    questions: [],\n    score: 0,\n    name: '',\n    scores: [],\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = {\n      name: this.state.name,\n      score: this.state.score,\n    };\n    console.log(formData);\n    axios.post('http://localhost:3000/scores', formData).then((res) => {\n      if (res.status === 201) this.getScores();\n    });\n  };\n\n  updateScore = () => {\n    this.setState({ score: this.state.score + 1 });\n  };\n\n  handleNewGame = () => {\n    this.setState(\n      {\n        score: 0,\n        questions: [],\n      },\n      () => this.getQuestions()\n    );\n  };\n\n  getQuestions = () => {\n    this.setState({\n      questions: data.questions,\n    });\n  };\n\n  getScores = () => {\n    axios\n      .get('http://localhost:3000/scores')\n      .then((scores) => this.setState({ scores }));\n  };\n\n  componentDidMount = () => {\n    this.getQuestions();\n    this.getScores();\n  };\n\n  render() {\n    let displayedQuestions = [...this.state.questions];\n    return (\n      <div className=\"game-container\">\n        <h1 className=\"game-title\">Lutrivia</h1>\n        <div className=\"game-header\">\n          <button className=\"game-button new-game\" onClick={this.handleNewGame}>\n            New Game\n          </button>\n          <p className=\"score\">Score: {this.state.score}</p>\n        </div>\n        <div className=\"questions-list-container\">\n          {displayedQuestions.map((question, idx) => {\n            return (\n              <Question\n                key={idx}\n                {...question}\n                updateScore={this.updateScore}\n              />\n            );\n          })}\n        </div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            className=\"name-input\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            placeholder=\"Name\"\n          />\n          <button className=\"game-button submit-button\">Submit Score</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}