{"ast":null,"code":"var _jsxFileName = \"/Users/Joseph/Development/code/MOD 4 Labs/lutrivia-react-chicago-web-82619/lutrivia/src/App.js\";\nimport React, { Component } from 'react';\nimport data from './data';\nimport Question from './Question';\nimport axios from 'axios';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [],\n      score: 0,\n      name: '',\n      scores: []\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const formData = {\n        name: this.state.name,\n        score: this.state.score\n      };\n      axios.post('http://localhost:3000/scores', formData).then(res => {\n        if (res.status === 201) {\n          this.getScores();\n          this.setState({\n            name: '',\n            score: 0\n          });\n        }\n      });\n    };\n\n    this.updateScore = () => {\n      this.setState({\n        score: this.state.score + 1\n      });\n    };\n\n    this.handleNewGame = () => {\n      this.setState({\n        score: 0,\n        questions: []\n      }, () => this.getQuestions());\n    };\n\n    this.getQuestions = () => {\n      this.setState({\n        questions: data.questions\n      });\n    };\n\n    this.getScores = () => {\n      axios.get('http://localhost:3000/scores').then(scores => this.setState({\n        scores: scores.data\n      }));\n    };\n\n    this.componentDidMount = () => {\n      this.getQuestions();\n      this.getScores();\n    };\n  }\n\n  render() {\n    console.log(this.state.scores);\n    let displayedQuestions = [...this.state.questions];\n    let displayedScores = [...this.state.scores];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"game-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Lutrivia\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"game-button new-game\",\n      onClick: this.handleNewGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"New Game\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Score: \", this.state.score)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, displayedQuestions.map((question, idx) => {\n      return /*#__PURE__*/React.createElement(Question, Object.assign({\n        key: idx\n      }, question, {\n        updateScore: this.updateScore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"name-input\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      placeholder: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"game-button submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Submit Score\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scores-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Scores\"), displayedScores.map(score => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: score.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, score.name));\n    })));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/Joseph/Development/code/MOD 4 Labs/lutrivia-react-chicago-web-82619/lutrivia/src/App.js"],"names":["React","Component","data","Question","axios","App","state","questions","score","name","scores","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","formData","post","then","res","status","getScores","updateScore","handleNewGame","getQuestions","get","componentDidMount","render","console","log","displayedQuestions","displayedScores","map","question","idx","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport data from './data';\nimport Question from './Question';\nimport axios from 'axios';\n\nexport class App extends Component {\n  state = {\n    questions: [],\n    score: 0,\n    name: '',\n    scores: [],\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = {\n      name: this.state.name,\n      score: this.state.score,\n    };\n    axios.post('http://localhost:3000/scores', formData).then((res) => {\n      if (res.status === 201) {\n        this.getScores();\n        this.setState({\n          name: '',\n          score: 0,\n        });\n      }\n    });\n  };\n\n  updateScore = () => {\n    this.setState({ score: this.state.score + 1 });\n  };\n\n  handleNewGame = () => {\n    this.setState(\n      {\n        score: 0,\n        questions: [],\n      },\n      () => this.getQuestions()\n    );\n  };\n\n  getQuestions = () => {\n    this.setState({\n      questions: data.questions,\n    });\n  };\n\n  getScores = () => {\n    axios\n      .get('http://localhost:3000/scores')\n      .then((scores) => this.setState({ scores: scores.data }));\n  };\n\n  componentDidMount = () => {\n    this.getQuestions();\n    this.getScores();\n  };\n\n  render() {\n    console.log(this.state.scores)\n    let displayedQuestions = [...this.state.questions];\n    let displayedScores = [...this.state.scores]\n\n    return (\n      <div>\n        <div className=\"game-container\">\n          <h1 className=\"game-title\">Lutrivia</h1>\n          <div className=\"game-header\">\n            <button\n              className=\"game-button new-game\"\n              onClick={this.handleNewGame}\n            >\n              New Game\n            </button>\n            <p className=\"score\">Score: {this.state.score}</p>\n          </div>\n          <div className=\"questions-list-container\">\n            {displayedQuestions.map((question, idx) => {\n              return (\n                <Question\n                  key={idx}\n                  {...question}\n                  updateScore={this.updateScore}\n                />\n              );\n            })}\n          </div>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              className=\"name-input\"\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleInputChange}\n              placeholder=\"Name\"\n            />\n            <button className=\"game-button submit-button\">Submit Score</button>\n          </form>\n        </div>\n        <div className=\"scores-container\">\n          <h2>Scores</h2>\n          {displayedScores.map((score) => {\n            return (\n              <div id={score.id}>\n                <p>{score.name}</p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}